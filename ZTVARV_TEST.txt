*&---------------------------------------------------------------------*
*& Report  ZTVARV_TEST
*&
*&---------------------------------------------------------------------*

REPORT  ztvarv_test.


START-OF-SELECTION.

  PERFORM print_get_value.

  PERFORM print_get_value_with_cm.

  PERFORM print_get_value_by_sep.

  PERFORM print_get_value_in_range_1.

  PERFORM print_get_value_in_range_2.

  PERFORM print_get_value_in_range_3.

*&---------------------------------------------------------------------*
*&      Form  PRINT_GET_VALUE
*&---------------------------------------------------------------------*
FORM print_get_value .
  WRITE sy-uline.
  WRITE: /'Get Simple Value- Method "GET" without "CALL METHOD"' .
***
*1.A- Get Simple Value- Method "GET" without "CALL METHOD"
***
  DATA: lv_var_1 TYPE tvarvc-low.

  lv_var_1 = zcl_tvarv=>get_value( i_name = 'SINGLE_VALUE' ).

  WRITE: /'Value:', lv_var_1.



ENDFORM.                    " PRINT_GET_VALUE
*&---------------------------------------------------------------------*
*&      Form  PRINT_GET_VALUE_WITH_CM
*&---------------------------------------------------------------------*
FORM print_get_value_with_cm .
  WRITE sy-uline.
  WRITE: /'Get Simple Value- Method "GET" with "CALL METHOD"' .

***
*1.B- Get Simple Value- Method "GET" with "CALL METHOD"
***
  DATA: lv_var_2 TYPE tvarvc-low.

  CALL METHOD zcl_tvarv=>get_value
    EXPORTING
     i_name = 'SINGLE_VALUE'
    RECEIVING
      r_value = lv_var_2
*  EXCEPTIONS
*    ex_not_found = 1
*    others       = 2
  .
  IF sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.
  WRITE: /'Value:', lv_var_2.
ENDFORM.                    " PRINT_GET_VALUE_WITH_CM

*&---------------------------------------------------------------------*
*&      Form  PRINT_GET_VALUE_BY_SEP
*&---------------------------------------------------------------------*
FORM print_get_value_by_sep .
  WRITE sy-uline.
  WRITE: /'Get variable by Separator - zcl_tvarv=>get_value_by_sep' .


  DATA: lv_value_sep TYPE tvarvc-low.
  CALL METHOD zcl_tvarv=>get_value_by_sep
    EXPORTING
      i_name      = 'SINGLE_VALUE_SEP'
      i_sep       = '#'
      i_param_num = 2
    RECEIVING
      r_value     = lv_value_sep.

  WRITE: /'Value:', lv_value_sep.
ENDFORM.                    " PRINT_GET_VALUE_BY_SEP
*&---------------------------------------------------------------------*
*&      Form  PRINT_GET_VALUE_IN_RANGE
*&---------------------------------------------------------------------*

FORM print_get_value_in_range_1 .
  WRITE sy-uline.
  WRITE: /'Range_ 1: Get variable by Range - zcl_tvarv=>et_value_in_range' .


***
*1.A- Obtención de Variable Range - Método abreviado
***
  DATA: lr_data TYPE RANGE OF bukrs.

  zcl_tvarv=>get_value_in_range(  EXPORTING i_name = 'BUKRS'
                                  IMPORTING e_range = lr_data ).

  DATA: le_data LIKE LINE OF lr_data.

  LOOP AT lr_data INTO le_data.
    WRITE: /'Value:', le_data-sign, le_data-option, le_data-low, le_data-high.
  ENDLOOP.

ENDFORM.                    " PRINT_GET_VALUE_IN_RANGE
*&---------------------------------------------------------------------*
*&      Form  PRINT_GET_VALUE_IN_RANGE_2
*&---------------------------------------------------------------------*

FORM print_get_value_in_range_2 .
  WRITE sy-uline.
  WRITE: /'Range_ 2: Get variable by Range - zcl_tvarv=>et_value_in_range' .


***
*1.A- Obtención de Variable Range - Método abreviado
***
  DATA: lr_data TYPE RANGE OF median.

  zcl_tvarv=>get_value_in_range(  EXPORTING i_name = 'MULTI_VALUE_2'
                                  IMPORTING e_range = lr_data ).

  DATA: le_data LIKE LINE OF lr_data.

  LOOP AT lr_data INTO le_data.
    WRITE: /'Value:', le_data-sign, le_data-option, le_data-low, le_data-high.
  ENDLOOP.

ENDFORM.                    " PRINT_GET_VALUE_IN_RANGE_2
*&---------------------------------------------------------------------*
*&      Form  PRINT_GET_VALUE_IN_RANGE_3
*&---------------------------------------------------------------------*

FORM print_get_value_in_range_3 .
  WRITE sy-uline.
  WRITE: /'Range_ 3: Get variable by Range - zcl_tvarv=>et_value_in_range' .


***
*1.A- Obtención de Variable Range - Método abreviado
***
  DATA: lr_data TYPE RANGE OF  char20. "Reemplazar por mí rango!!!!!! Ej: lr_bukrs TYPE RANGE bukrs.

  zcl_tvarv=>get_value_in_range(  EXPORTING i_name = 'MULTI_VALUE'
                                  IMPORTING e_range = lr_data  ).



  DATA: le_data LIKE LINE OF lr_data.

  LOOP AT lr_data INTO le_data.
    WRITE: /'Value:', le_data-sign, le_data-option, le_data-low, le_data-high.
  ENDLOOP.

ENDFORM.                    " PRINT_GET_VALUE_IN_RANGE_3
